Program.Sub.ScreenSU.Start
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
	V.Global.iBIRunID.Declare(Long,-1)
	V.Global.iLogID.Declare(Long,-1)
	V.Global.sError.Declare()
	V.Global.sJob.Declare()
	V.Global.sQty.Declare()
	V.Global.sSeq.Declare()
	V.Global.sSQL.Declare()
	V.Global.sSuffix.Declare()
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
	
	V.Local..BulkDeclareLong(i,iRows)
	V.Local..BulkDeclareString(sClosed,sComments,sQuery,sReturn,sReturn2)
	
	F.ODBC.Connection!con.OpenCompanyConnection()
	
'	ID Description Screen Program
'	000050621 On-Line GUI - OLS003 Process Line Hook *********
	
	' Verify that a printer has been set up for the current SFDC (On Line System > Administration > SFDC Move Ticket Terminal Maintenance).
	F.Intrinsic.String.Build("SELECT printer FROM GAB_6953_MV_TCKT_SU WHERE trmnl = '{0}' ", V.Caller.Terminal, V.Local.sQuery)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sQuery, V.Local.sReturn)
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		F.Intrinsic.Control.CallSub(Unload)
	F.Intrinsic.Control.EndIf
	' If setup is verified (printer is found for this terminal), then continue.
	
	' If called from the Update screen Process (OK) button hook, then print out the scrap tickets.
	' Note: If there are multiple jobs being updated, then this hook/script would run multiple times, once for each job to print its tickets.
	F.Intrinsic.Control.If(V.Caller.Hook, =, "50621")
		
		' TODO: figure out a better way than having some variables Global and some passed via CallSub
		V.Global.sJob.Set(V.Passed.TXT-JOB)
		V.Global.sSuffix.Set(V.Passed.TXT-SUFFIX)
		V.Global.sSeq.Set(V.Passed.TXT-SEQ)
		V.Global.sQty.Set(V.Passed.GOOD-PIECES)
		
		' Process the passed CHK-CLOSE-OPERATION.
		V.Local.sClosed.Set("N")
		F.Intrinsic.Control.If(V.Passed.CHK-CLOSE-OPERATION, =, "True")
			V.Local.sClosed.Set("Y")
		F.Intrinsic.Control.ElseIf(V.Passed.CHK-CLOSE-OPERATION, =, "False")
			V.Local.sClosed.Set("N")
		F.Intrinsic.Control.EndIf
		
		' Process the passed COMMENTS.
		F.Intrinsic.String.Replace(V.Passed.COMMENTS, "<CRLF>", " ", V.Local.sComments)
		
		' Clear temp table of previous ticket data.
		F.Intrinsic.String.Build("DELETE FROM GAB_6953_MV_TCKT_LBL WHERE trmnl = '{0}' ", V.Caller.Terminal, V.Local.sQuery)
		F.ODBC.Connection!Con.Execute(V.Local.sQuery)
		
		' Send a blank string for sQualitynbr because the Quality Number gets pulled straight from the DB later anyways, so the value being sent does not matter.
		' Also, hook 50621 currently does not pass the QualityNumber.
		F.Intrinsic.Control.CallSub(PrintTicket, "sScrapQty", V.Passed.SCRAP-PIECES, "sEmployee", V.Passed.EmployeeName, "sWC", V.Passed.WC, "sQualitynbr", "", "sCloseflag", V.Local.sClosed, "sComments", V.Local.sComments, "sScrapRef", V.Passed.SCRAP-REF)
		
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.CallSub(Unload)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
	F.Intrinsic.UI.Msgbox(V.Global.sError)
	F.Intrinsic.Control.End()
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.PrintTicket.Start
F.Intrinsic.Control.Try

	V.Local.sScrapQty.Declare(String)
	V.Local.sCurPart.Declare(String)
	V.Local.sCurDescr.Declare(String)
	V.Local.sQtyCompleted.Declare(Float)
	V.Local.sNextSeq.Declare(String)
	V.Local.sNextPart.Declare(String)
	V.Local.sNextDescr.Declare(String)
	V.Local.sLMO.Declare(String)
	V.Local.sNext_DateStart.Declare(String)
	V.Local.sNext_DateDue.Declare(String)
	V.Local.sPart.Declare(String)
	V.Local.sCust.Declare(String)
	V.Local.sWOPriority.Declare(String)
	V.Local.sPartDescr.Declare(String)
	V.Local.sWOQty.Declare(String)
	V.Local.sWOCustQty.Declare(String)
	V.Local.sWODateDue.Declare(String)
	V.Local.sName.Declare(String)
	V.Local.sEmployee.Declare(String)
	V.Local.sScrapCode.Declare(String)
	V.Local.sScrapDescription.Declare(String)
	V.Local.sParentJob.Declare(String)
	V.Local.sParentSuffix.Declare(String)
	V.Local.sParentPart.Declare(String)
	V.Local.sParentDescr.Declare(String)
	V.Local.sTopParentJob.Declare(String)
	V.Local.sTopParentSuffix.Declare(String)
	V.Local.sTopParentPart.Declare(String)
	V.Local.sTopParentDescr.Declare(String)
	V.Local.sParentInitWC.Declare(String)
	V.Local.sWC.Declare(String)
	V.Local.sQualitynbr.Declare(String)
	V.Local.sCloseflag.Declare(String)
	V.Local.sComments.Declare(String)
	V.Local.sRptLoc.Declare(String)
	V.Local.iRptID.Declare(Long)
	V.Local.sTPrinter.Declare(String)
	V.Local.sScrapPrinter.Declare(String)
	V.Local.sScrapFlag.Declare(String)
	V.Local.sParams.Declare(String)
	V.Local.sValues.Declare(String)
	V.Local.sScrapRef.Declare(String)
	V.Local.dNext_DateStart.Declare(Date)
	V.Local.dNext_DateDue.Declare(Date)
	v.Local.iRet.Declare(Long)
	
	V.Local.sScrapQty.Set(V.Args.sScrapQty)
	V.Local.sEmployee.Set(V.Args.sEmployee)
	V.Local.sWC.Set(V.Args.sWC)
	V.Local.sQualitynbr.Set(V.Args.sQualitynbr)
	V.Local.sCloseflag.Set(V.Args.sCloseflag)
	V.Local.sComments.Set(V.Args.sComments)

	F.Intrinsic.Control.If(V.Local.sscrapqty.Float,<=,0)
		'exit sub as this could be called in a loop from the main..
		Function.Intrinsic.Control.ExitSub	
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("SELECT PART, DESCRIPTION, UNITS_COMPLETE FROM V_JOB_OPERATIONS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ = '{2}' ",V.Global.sjob,V.Global.sSuffix,V.Global.sSeq,V.Global.sSQL)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.Global.sSQL)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
		V.Local.sCurPart.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
		V.Local.sCurDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!DESCRIPTION)
		V.Local.sQtyCompleted.Set(V.ODBC.Con!rstSel.FieldValTrim!UNITS_COMPLETE)
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstSel.Close
	
	F.Intrinsic.String.Build("SELECT SEQ, PART, DESCRIPTION, LMO, DATE_START, DATE_DUE, UNITS_COMPLETE FROM V_JOB_OPERATIONS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ > '{2}' AND LMO <> 'C' AND LMO <> 'M' AND TASK_SEQ <> 'T' ORDER BY SEQ ",V.Global.sJob,V.Global.sSuffix,V.Global.sSeq,V.Global.sSQL)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.Global.sSQL)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
		V.Local.sNextSeq.Set(V.ODBC.Con!rstSel.FieldValTrim!SEQ)
		V.Local.sNextPart.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
		V.Local.sNextDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!DESCRIPTION)
		V.Local.sLMO.Set(V.ODBC.Con!rstSel.FieldValTrim!LMO)
		V.Local.dNext_DateStart.Set(V.ODBC.Con!rstSel.FieldVal!DATE_START)
		V.Local.dNext_DateDue.Set(V.ODBC.Con!rstSel.FieldVal!DATE_DUE)
	F.Intrinsic.Control.Else
		F.Intrinsic.Date.ConvertDString("01/01/1900","mm/dd/yyyy",V.Local.dNext_DateStart)
		F.Intrinsic.Date.ConvertDString("01/01/1900","mm/dd/yyyy",V.Local.dNext_DateDue)
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstSel.Close

	F.Intrinsic.String.Build("SELECT PART, CUSTOMER, PRIORITY, PART_DESCRIPTION,QTY_ORDER, QTY_CUSTOMER, DATE_DUE FROM V_JOB_HEADER WHERE JOB = '{0}' AND SUFFIX = '{1}' ",V.Global.sJob,V.Global.sSuffix,V.Global.sSQL)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
		V.Local.sPart.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
		V.Local.sCust.Set(V.ODBC.Con!rstSel.FieldValTrim!CUSTOMER)
		V.Local.sWOPriority.Set(V.ODBC.Con!rstSel.FieldValTrim!PRIORITY)
		V.Local.sPartDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!PART_DESCRIPTION)
		V.Local.sWOQty.Set(V.ODBC.Con!rstSel.FieldValTrim!QTY_ORDER)
		V.Local.sWOCustQty.Set(V.ODBC.Con!rstSel.FieldValTrim!QTY_CUSTOMER)
		V.Local.sWODateDue.Set(V.ODBC.Con!rstSel.FieldValTrim!DATE_DUE)
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstSel.Close
	
	F.Intrinsic.String.Build("SELECT NAME_CUSTOMER FROM V_CUSTOMER_MASTER WHERE CUSTOMER = '{0}' ",V.Local.sCust.PSQLFriendly,V.Global.sSQL)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
		V.Local.sName.Set(V.ODBC.Con!rstSel.FieldValTrim!NAME_CUSTOMER)
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstSel.Close
	
	F.Intrinsic.String.Build("SELECT SCRAP_REASON FROM V_JOBS_IN_PROCESS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQUENCE = '{2}' AND EMPLOYEE_NAME = '{3}' ORDER BY SEQUENCE_KEY DESC ",V.Global.sJob,V.Global.sSuffix,V.Global.sSeq,V.Local.sEmployee.PSQLFriendly,V.Global.sSQL)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
		V.Local.sScrapCode.Set(V.ODBC.Con!rstSel.FieldValTrim!SCRAP_REASON)
		F.Intrinsic.String.Build("SELECT SCRAP_CODE_DESC FROM V_RJCT_SCRP_CODES WHERE SCRAP_CODE = '{0}' ",V.Local.sScrapCode,V.Global.sSQL)
		F.ODBC.Connection!Con.OpenRecordsetRO("rstSelA",V.global.sSQL)
		F.Intrinsic.Control.If(V.ODBC.Con!rstSelA.EOF,=,False)
			V.Local.sScrapDescription.Set(V.ODBC.Con!rstSelA.FieldValTrim!SCRAP_CODE_DESC)
		F.Intrinsic.Control.EndIf
		F.ODBC.Con!rstSelA.Close
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstSel.Close

	F.Intrinsic.String.Build("SELECT PARENT_WO, PARENT_SUFFIX_PARENT FROM V_JOB_HEADER WHERE JOB = '{0}' AND SUFFIX = '{1}' ",V.Global.sJob,V.Global.sSuffix,V.Global.sSQL)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
		V.Local.sParentJob.Set(V.ODBC.Con!rstSel.FieldValTrim!Parent_WO)
		V.Local.sParentSuffix.Set(V.ODBC.Con!rstSel.FieldValTrim!Parent_Suffix_Parent)
		F.Intrinsic.String.Build("SELECT PART, PART_DESCRIPTION FROM V_JOB_HEADER WHERE JOB = '{0}' AND SUFFIX = '{1}' ",V.Local.sParentJob,V.Local.sParentSuffix,V.Global.sSQL)
		F.ODBC.Connection!Con.OpenRecordsetRO("rstSelA",V.global.sSQL)
		F.Intrinsic.Control.If(V.ODBC.Con!rstSelA.EOF,=,False)
			V.Local.sParentPart.Set(V.ODBC.Con!rstSelA.FieldValTrim!Part)
			V.Local.sParentDescr.Set(V.ODBC.Con!rstSelA.FieldValTrim!Part_Description)
		F.Intrinsic.Control.EndIf
		F.ODBC.Con!rstSelA.Close
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstSel.Close
	
	F.Intrinsic.String.Build("SELECT JOB, SUFFIX, PART, PART_DESCRIPTION FROM V_JOB_HEADER WHERE JOB = '{0}' AND SUFFIX = '000' ",V.Global.sJob,V.Global.sSQL)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
		V.Local.sTopParentJob.Set(V.ODBC.Con!rstSel.FieldValTrim!Job)
		V.Local.sTopParentSuffix.Set(V.ODBC.Con!rstSel.FieldValTrim!Suffix)
		V.Local.sTopParentPart.Set(V.ODBC.Con!rstSel.FieldValTrim!Part)
		V.Local.sTopParentDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!Part_Description)
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstSel.Close
	
	F.Intrinsic.String.Build("SELECT PART FROM V_JOB_OPERATIONS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND LMO = 'L' ORDER BY SEQ ",V.Local.sParentJob,V.Local.sParentSuffix,V.Global.sSQL)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
		V.Local.sParentInitWC.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstSel.Close

	F.Intrinsic.String.Build("SELECT * FROM GAB_6953_MV_TCKT_LBL WHERE TRMNL = '{0}' ",V.Caller.Terminal,V.Global.sSQL)
	F.ODBC.Connection!Con.OpenRecordsetRW("rstSel",V.global.sSQL)
	F.ODBC.Con!rstSel.AddNew
	F.ODBC.Con!rstSel.Set!TRMNL(V.Caller.Terminal)
	F.ODBC.Con!rstSel.Set!JOB(V.global.sJob)
	F.ODBC.Con!rstSel.Set!SUFFIX(V.global.sSuffix)
	F.ODBC.Con!rstSel.Set!CUR_SEQ(V.global.sSeq)
	F.ODBC.Con!rstSel.Set!CUR_PART(V.Local.sCurPart)
	F.ODBC.Con!rstSel.Set!CUR_DESCR(V.Local.sCurDescr)
	F.ODBC.Con!rstSel.Set!LMO(V.Local.sLMO)
	F.ODBC.Con!rstSel.Set!QTY(V.global.sQty)
	F.ODBC.Con!rstSel.Set!WORKCENTER(V.Local.sWC)
	F.ODBC.Con!rstSel.Set!EMPLOYEE(V.Local.sEmployee)
	F.ODBC.Con!rstSel.Set!QUALITY_NO(V.Local.sQualitynbr)
	F.ODBC.Con!rstSel.Set!SCRAP_CODE(V.Local.sScrapCode)
	F.ODBC.Con!rstSel.Set!SCRAP_CODE_DESC(V.Local.sScrapDescription)
	F.ODBC.Con!rstSel.Set!SCRAP_QTY(V.Local.sScrapqty)
	F.ODBC.Con!rstSel.Set!CLOSE_FLAG(V.Local.sCloseflag)
	F.ODBC.Con!rstSel.Set!PART(V.Local.sPart)
	F.ODBC.Con!rstSel.Set!CUSTOMER(V.Local.sCust)
	F.ODBC.Con!rstSel.Set!NAME(V.Local.sName)
	F.ODBC.Con!rstSel.Set!NEXT_SEQ(V.Local.sNextSeq)
	F.ODBC.Con!rstSel.Set!NEXT_PART(V.Local.sNextPart)
	F.ODBC.Con!rstSel.Set!NEXT_DESCR(V.Local.sNextDescr)
	F.ODBC.Con!rstSel.Set!Parent_Job(V.Local.sParentJob)
	F.ODBC.Con!rstSel.Set!Parent_Suffix(V.Local.sParentSuffix)
	F.ODBC.Con!rstSel.Set!Parent_Part(V.Local.sParentPart)
	F.ODBC.Con!rstSel.Set!Parent_Descr(V.Local.sParentDescr)
	F.ODBC.Con!rstSel.Set!Top_Parent_Job(V.Local.sTopParentJob)
	F.ODBC.Con!rstSel.Set!Top_Parent_Suffix(V.Local.sTopParentSuffix)
	F.ODBC.Con!rstSel.Set!Top_Parent_Part(V.Local.sTopParentPart)
	F.ODBC.Con!rstSel.Set!Top_Parent_Descr(V.Local.sTopParentDescr)
	F.ODBC.Con!rstSel.Set!QUALITY_NO(V.Local.sQualitynbr)
	F.ODBC.Con!rstSel.Set!NEXT_SEQ_START(V.Local.dNext_DateStart.PervasiveDate)
	F.ODBC.Con!rstSel.Set!NEXT_SEQ_DUE(V.Local.dNext_DateDue.PervasiveDate)
	F.ODBC.Con!rstSel.Set!WO_PRIORITY(V.Local.sWOPriority)
	F.ODBC.Con!rstSel.Set!PART_DESCR(V.Local.sPartDescr)
	F.ODBC.Con!rstSel.Set!WO_QTY(V.Local.sWOQty)
	F.ODBC.Con!rstSel.Set!WO_CUSTOMER_QTY(V.Local.sWOCustQty)
	F.ODBC.Con!rstSel.Set!WO_DUE_DATE(V.Local.sWODateDue)
	F.ODBC.Con!rstSel.Set!QTY_COMPLETED(V.Local.sQtyCompleted)
	F.ODBC.Con!rstSel.Set!Parent_InitWC(V.Local.sParentInitWC)
	F.ODBC.Con!rstSel.Set!Comments(V.Local.sComments)
	F.ODBC.Con!rstSel.Update
	F.ODBC.Con!rstSel.Close
	
	F.Intrinsic.String.Build("{0}\Custom\GAB_6953_MoveTicketLabel.rpt",V.Caller.BusintDir,V.Local.sRptLoc)
	F.Global.BI.InitializeReport("Move Ticket Label 6953",V.Local.sRptLoc,V.Local.iRptID)
	
	F.Intrinsic.String.Build("SELECT PRINTER, SCRAPPRINTER FROM GAB_6953_MV_TCKT_SU WHERE TRMNL = '{0}' ",V.Caller.Terminal,V.Global.sSQL)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.Global.sSQL)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
		V.Local.sTPrinter.Set(V.ODBC.Con!rstSel.FieldValTrim!Printer)
		F.Intrinsic.Control.If(V.ODBC.Con!rstSel.FieldValTrim!ScrapPrinter,=,"")
			V.Local.sScrapPrinter.Set(V.Local.sTPrinter)
		F.Intrinsic.Control.Else
			V.Local.sScrapPrinter.Set(V.ODBC.Con!rstSel.FieldValTrim!ScrapPrinter)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	F.ODBC.Con!rstSel.Close

' SCRAP-REF = 0 if the user presses the Script 1 button on the processing screen.
'	If it is 0 and there was a scrap qty that will be processed later, it would try to go in here and incorrectly print out all the 0 SCRAP_REF rows.
'	This check prevents that.
V.Local.sScrapRef.Set(V.Passed.SCRAP-REF)
F.Intrinsic.Control.If(V.Local.sScrapRef.Float,>,0,"AND",V.Local.sscrapqty.Float,>,0)

	V.Local.sScrapflag.Set("Y")
	
	'Scrap - loop through scrap_data table by scrap_ref = sscrapref

	F.Intrinsic.String.Build("SELECT SCRAP_REF, QUALITY, REASON_CODE, QTY FROM SCRAP_DATA WHERE SCRAP_REF = '{0}' ",V.Local.sScrapRef,V.Global.sSQL)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
	
	Function.Intrinsic.Control.DoUntil(V.odbc.Con!rstSel.eof,=,True)

		V.Local.sQualitynbr.Set(V.ODBC.Con!rstSel.FieldValTrim!Quality)
		V.Local.sScrapQty.Set(V.ODBC.Con!rstSel.FieldValTrim!QTY)
		V.Local.sScrapCode.Set(V.ODBC.Con!rstSel.FieldValTrim!Reason_Code)

		F.Intrinsic.String.Build("SELECT SCRAP_CODE_DESC FROM V_RJCT_SCRP_CODES WHERE SCRAP_CODE = '{0}' ",V.Local.sScrapCode,V.Global.sSQL)
		F.ODBC.Connection!Con.OpenRecordsetRO("rstSelA",V.global.sSQL)
		F.Intrinsic.Control.If(V.ODBC.Con!rstSelA.EOF,=,False)
			V.Local.sScrapDescription.Set(V.ODBC.Con!rstSelA.FieldValTrim!SCRAP_CODE_DESC)
		F.Intrinsic.Control.EndIf
		F.ODBC.Con!rstSelA.Close

		F.Intrinsic.String.Build("SELECT * FROM GAB_6953_MV_TCKT_LBL WHERE TRMNL = '{0}' ",V.Caller.Terminal,V.Global.sSQL)
		F.ODBC.Connection!Con.OpenRecordsetRW("rstSelB",V.global.sSQL)

		F.ODBC.Con!rstSelB.Set!QUALITY_NO(V.Local.sQualitynbr)
		F.ODBC.Con!rstSelB.Set!SCRAP_CODE(V.Local.sScrapCode)
		F.ODBC.Con!rstSelB.Set!SCRAP_CODE_DESC(V.Local.sScrapDescription)
		F.ODBC.Con!rstSelB.Set!SCRAP_QTY(V.Local.sscrapqty)
		F.ODBC.Con!rstSelB.Update
		F.ODBC.Con!rstSelB.Close
		
		' Jun 2019: PrintReport is brought back from the older version. Note the True for the isSynchronous argument. This combined with setting the 15881 hook sequence to synchronous should resolve the issue where multiple tickets were not printing as expected when processing multiple quantity changes at once.
		F.Intrinsic.String.Split("TRMNL*!*Job*!*Suffix*!*Scrapflag","*!*",V.Local.sParams)
		F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}",V.Caller.Terminal,V.Global.sJob,V.Global.sSuffix,V.Local.sScrapflag,V.Local.sValues)
		F.Intrinsic.String.Split(V.Local.sValues,"*!*",V.Local.sValues)
		F.Global.BI.PrintReport(V.Local.iRptID,3,V.Local.sParams,V.Local.sValues,V.Local.sScrapPrinter,True)

		F.ODBC.con!rstSel.MoveNext
	Function.Intrinsic.Control.Loop
	F.ODBC.Con!rstSel.Close

F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
	F.Intrinsic.UI.Msgbox(V.Global.sError)
	F.Intrinsic.Control.End()
F.Intrinsic.Control.EndTry
Program.Sub.PrintTicket.End

Program.Sub.Unload.Start
F.Intrinsic.Control.Try

	F.ODBC.Connection!con.Close()
	F.Intrinsic.Control.End()

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
	F.Intrinsic.UI.Msgbox(V.Global.sError)
	F.Intrinsic.Control.End()
F.Intrinsic.Control.EndTry
Program.Sub.Unload.End

Program.Sub.Comments.Start
${$5$}$20.1.8315.16327$}$0
${$6$}$jwithrow$}$20221028141219657$}$D95tSYIikIvF+oq+s87EtBQePACEH+EydNCoHDy8n1pbBv45wsBxTby2YagLIaQ2KZiEU51oqp3YnmZBrQkE/g==
Program.Sub.Comments.End